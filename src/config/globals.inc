.include "src/definition/65816.opcodes"
.include "src/definition/snes.registers"
.include "src/definition/msu1.registers"
.include "src/definition/sa1.registers"
.include "src/config/macros.inc"
.include "src/config/structs.inc"

;kernel zp-vars(used by init,memoryclear,oophandler etc)
.enum 0
kernelStart ds 0
temp.kernel ds 10
temp.misc ds 8
kernelEnd 	ds 0
.ende

.define maxNumberOopObjs  64 ;must be multiple of 8 (unrolled loops)

.enum 14
OBJECT.CALL.ARG.1 dw
OBJECT.CALL.ARG.2 dw
OBJECT.CALL.ARG.3 dw
OBJECT.CALL.ARG.4 dw
OBJECT.CALL.ARG.5 dw
OBJECT.CALL.ARG.6 dw
OBJECT.CALL.ARG.7 dw
OBJECT.CALL.ARG.8 dw
OBJECT.CALL.ARG.9 dw
OBJECT.CALL.ARG.10 dw
OBJECT.CALL.ARG.11 dw
OBJECT.CALL.ARG.12 dw
.ende

.def OBJECT.CALL.ARGS.MAX 14

;object status flags
.def OBJECT.FLAGS.Singleton	1 << 0
.def OBJECT.FLAGS.Persistent	1 << 1
.def OBJECT.FLAGS.InitOk	1 << 2
.def OBJECT.FLAGS.DeleteScheduled	1 << 3
.def OBJECT.FLAGS.Paused   1 << 4 ;paused means: don't execute play routine, but pause routine
.def OBJECT.FLAGS.Disabled   1 << 5 ;disabled means: don't execute play or pause routine
.def OBJECT.FLAGS.Present	1 << 7

;obj properties (word)
.def OBJECT.PROPERTIES.isCutscene	1 << 0
.def OBJECT.PROPERTIES.isLevelSortable	1 << 1
.def OBJECT.PROPERTIES.isHdma	1 << 2
.def OBJECT.PROPERTIES.isCollidable	1 << 3
.def OBJECT.PROPERTIES.isLifeform	1 << 4
.def OBJECT.PROPERTIES.isUnitTest	1 << 5
.def OBJECT.PROPERTIES.isOption	1 << 6
.def OBJECT.PROPERTIES.isOnScreen	1 << 7
.def OBJECT.PROPERTIES.hurts	1 << 8
.def OBJECT.PROPERTIES.isSprite	1 << 9
.def OBJECT.PROPERTIES.isGrabbed	1 << 10
.def OBJECT.PROPERTIES.isLevelMember   1 << 11
.def OBJECT.PROPERTIES.isPlayer   1 << 12
.def OBJECT.PROPERTIES.isEnemy   1 << 13
.def OBJECT.PROPERTIES.isGrabbable   1 << 14
.def OBJECT.PROPERTIES.isActionable   1 << 15



.enum 0
  MALLOC.TILES db
  MALLOC.TILEMAP db
  MALLOC.PALETTE db
  MALLOC.MAXTYPES ds 0
.ende

.enum 0
  PALETTE.BPP.1 db
  PALETTE.BPP.2 db
  PALETTE.BPP.4 db
  PALETTE.BPP.8 db
.ende

.enum 0
  BG.LAYER.0 db
  BG.LAYER.1 db
  BG.LAYER.2 db
  BG.LAYER.3 db
.ende

;level collision tile ids and their meaning (@see data/levels/tileset.collision.png):
.enum 0
  LEVEL.COLLISION.TILE.TOPDOWN.EMPTY db
  LEVEL.COLLISION.TILE.TOPDOWN.SOLID db
  LEVEL.COLLISION.TILE.TOPDOWN.HAZARD db
  LEVEL.COLLISION.TILE.TOPDOWN.ICE db
  LEVEL.COLLISION.TILE.TOPDOWN.ABYSS db
  LEVEL.COLLISION.TILE.TOPDOWN.CONSTRAINED db
  LEVEL.COLLISION.TILE.TOPDOWN.ELEVATED db
  LEVEL.COLLISION.TILE.TOPDOWN.STAIR db

  LEVEL.COLLISION.TILE.SIDESCROLL.EMPTY db
  LEVEL.COLLISION.TILE.SIDESCROLL.SOLID db
  LEVEL.COLLISION.TILE.SIDESCROLL.HAZARD db
  LEVEL.COLLISION.TILE.SIDESCROLL.ICE db
  LEVEL.COLLISION.TILE.SIDESCROLL.ABYSS db
  LEVEL.COLLISION.TILE.SIDESCROLL.CONSTRAINED db
  LEVEL.COLLISION.TILE.SIDESCROLL.ELEVATED db
  LEVEL.COLLISION.TILE.SIDESCROLL.STAIR db
  LEVEL.COLLISION.TILE.MAX ds 0   ;not actual entry, just for length check
.ende

.def LEVEL.COLLISION.TILE.MASK 15

.enum 0
EventTarget.none db
.ende


;animation file format (sprites and bgs)
.enum 0
  ANIMATION.MAGIC dw
  ANIMATION.MAX.TILES.NORMAL dw
  ANIMATION.MAX.TILES.BIG dw  
  ANIMATION.MAX.PALETTE dw
  ANIMATION.MAX.TILEMAP dw
  ANIMATION.MAX.FRAMES dw
  ANIMATION.LOOPSTART dw
  ANIMATION.BPP db
  ANIMATION.TILESIZE.BIG db ;1: 8x8 (no big tiles), 2:16x16, 4:32x32, 8:64x64
  ANIMATION.SIZE.X dw
  ANIMATION.SIZE.Y dw
  ANIMATION.FLAGS.STATIC db
  ANIMATION.TILES.HASH dw
  ANIMATION.PALETTE.HASH dw
  ANIMATION.FRAMERATE.MASK db
  ANIMATION.FRAME.POINTER dw
.ende

.def ANIMATION.FLAGS.STATIC.PALETTES 1
.def ANIMATION.FLAGS.STATIC.TILES 2
.def ANIMATION.FLAGS.UPLOADED.PALETTES 4
.def ANIMATION.FLAGS.UPLOADED.TILES 8
.def ANIMATION.FLAGS.UPLOADED.TILES_BIG 16
.def ANIMATION.FLAGS.ANY.UPLOADED.TILES 32
.def ANIMATION.FLAGS.IS_PLAYING 64
.def ANIMATION.FLAGS.IS_LOOPING 128
.def ANIMATION.FLAGS.IS_COLOR_MATH 256
.def ANIMATION.FLAGS.POSITION_ABSOLUTE 512
.def ANIMATION.FLAGS.IS_MAINSCREEN 1024 ;only relevant for bg
.def ANIMATION.FLAGS.NO_RESTART 1024 ;only for sprites
.def ANIMATION.FLAGS.IS_SUBSCREEN 2048 ;only relevant for bg
.def ANIMATION.FLAGS.ANY.UPLOADED.PALETTES 2048 ;only relevant for sprites
.def ANIMATION.FLAGS.IS_HIDDEN 4096 ;only relevant for bg
.def ANIMATION.FLAGS.UPLOADED.TILEMAP 4096 ;only relevant for sprites
.def ANIMATION.FLAGS.X_MIRROR 8192
.def ANIMATION.FLAGS.PRIORITY_MAX 16384
.def ANIMATION.FLAGS.CENTER_ON_INIT 32768


.def ANIMATION.FLAGS.DUMMY 32768

.def FRAME.FLAG.TILES_PACKED $1
.def FRAME.FLAG.TILEMAP_PACKED $2
.def FRAME.FLAG.PALETTE_PACKED $4

.enum 0
    ANIMATION.FRAME.DELAY db
    ANIMATION.FRAME.FLAGS db
    ANIMATION.FRAME.TILES.NORMAL.POINTER dw
    ANIMATION.FRAME.TILES.NORMAL.LENGTH dw
    ANIMATION.FRAME.TILES.BIG.LENGTH dw
    ANIMATION.FRAME.PALETTE.POINTER dw
    ANIMATION.FRAME.PALETTE.LENGTH dw
    ANIMATION.FRAME.TILEMAP.NORMAL.POINTER dw
    ANIMATION.FRAME.TILEMAP.NORMAL.LENGTH dw
    ANIMATION.FRAME.TILEMAP.BIG.LENGTH dw
    ANIMATION.FRAME.TILEMAP.XMIRROR.NORMAL.POINTER dw
    ANIMATION.FRAME.DATA ds 0
.ende

;.def ANIMATION.MAGIC.VALUE "SP"
.def ANIMATION.MAGIC.VALUE $5053

;.def SONGPATTERN.MAGIC.VALUE "PT"
.def SONGPATTERN.MAGIC.VALUE $5450

;hdma animation file format
.enum 0
  HDMA_ANIMATION.MAGIC dw
  HDMA_ANIMATION.TYPE db
  HDMA_ANIMATION.MAX.FRAMES dw
  HDMA_ANIMATION.LOOPSTART dw
  HDMA_ANIMATION.DUMMY db
  HDMA_ANIMATION.FRAME.POINTER dw
.ende

;.def HDMA_ANIMATION.MAGIC.VALUE "HO"
.def HDMA_ANIMATION.MAGIC.VALUE $4f48

;hdma animation file format
.enum 0
  PALETTE_ANIMATION.MAGIC dw
  PALETTE_ANIMATION.MAX.LENGTH dw
  PALETTE_ANIMATION.MAX.FRAMES dw
  PALETTE_ANIMATION.LOOPSTART dw
  PALETTE_ANIMATION.HASH dw
  PALETTE_ANIMATION.FRAME.POINTER dw
.ende

;.def PALETTE_ANIMATION.MAGIC.VALUE "PA"
.def PALETTE_ANIMATION.MAGIC.VALUE $4150


.def BANK.MAGIC.VALUE $a55a

;interfaces
.enum 0
interface.dimension db
interface.option db
.ende


.def PALETTE.COLOR.COUNT 256
.def PALETTE.COLOR.SIZE 2
.def PALETTE.START.BG 0
.def PALETTE.START.BG.2BPP 0
.def PALETTE.START.BG.4BPP $20
.def PALETTE.START.BG.8BPP 0
.def PALETTE.START.SPRITE $100
.def PALETTE.START.SPRITE.LAST $160
.def PALETTE.START.SPRITE_COLORMATH $180
.def PALETTE.GRANULARITY.1BPP $4
.def PALETTE.GRANULARITY.2BPP $8
.def PALETTE.GRANULARITY.4BPP $20
.def PALETTE.GRANULARITY.8BPP $200


.def TILEMAP.GRANULARITY $800
.def TILEMAP.ENTRY.SIZE 2
.def TILEMAP.SIZE.SINGLE $800
.def TILEMAP.SIZE.DUAL $1000
.def TILEMAP.SIZE.QUADRUPLE $2000

.def TILEMAP.BITFLAG.TILE %1111111111
.def TILEMAP.BITFLAG.PALETTE %1110000000000
.def TILEMAP.BITFLAG.PRIORITY %10000000000000

.def TILEMAP.SIZE.X 32
.def TILEMAP.SIZE.Y 32

.def TILE.SIZE.X 8
.def TILE.SIZE.Y 8


.def TILES.GRANULARITY $2000

.def SPRITE.NAMETABLE.GRANULARITY $4000
.def SPRITE.NAMETABLE.PRIMER $c000
.def SPRITE.TILE.GRANULARITY $80   ;must equal minimum vram allocation blocksize sadly

.def SPRITE.TILE.SIZE $20
.def SPRITE.TILE.INTERLACE.LENGTH $200

.enum 0
 SPRITE.DIRECTION.RIGHT db
 SPRITE.DIRECTION.LEFT db
 SPRITE.DIRECTION.DOWN db
 SPRITE.DIRECTION.UP db
.ende

.def SCREEN.SIZE 256

.def SCREEN.SIZE.X 256
.def SCREEN.SIZE.Y 224

.def PLAYER.BONUS.DEFAULT 1
.def PLAYER.BONUS.EXTRA 2

.def EVENT.BONUS.EXTRA.TIMEOUT 16

;program-specific stuff
.define TILE2BPP	16
.define TILE4BPP	32
.define TILE8BPP	64

.define frameResX 32
.define frameResY 15

.define rwTest	$aa55

.define VOID $ffff

.define TRUE	1
.define FALSE	0

.def SCRIPT_MAGIC $bade
.def RESULT_MAGIC $affe
.def IRQ_MAGIC $dead
.def CALLBACK_MAGIC $face

.def SCRIPT.MAX_AGE.DEFAULT $80
.def SCRIPT.ARGS.LENGTH 3

.def SPRITE.LIFE_COUNTER.MAX_AGE 120

.def OAM.PALETTE.BITS %1110
.def OAM.PRIORITY.BITS %110000
.def OAM.PRIORITY.0 %000000
.def OAM.PRIORITY.1 %010000
.def OAM.PRIORITY.2 %100000
.def OAM.PRIORITY.3 %110000

.def GRAVITY.ACCELERATION 18

.def STACK.OFFSET.JSR 3

.enum 0
WRAM.CLEAR_PATTERN.ZERO db
WRAM.CLEAR_PATTERN.NOP db
WRAM.CLEAR_PATTERN.BG3 db
WRAM.CLEAR_PATTERN.OAM db
WRAM.CLEAR_PATTERN.BG1 db
WRAM.CLEAR_PATTERN.STRING db
.ende

.def BRIGHTNESS.FULL $f
.def BRIGHTNESS.HALF $8
.def BRIGHTNESS.NONE $0

.def HIGHSCORE.COUNT 5

.def IRQ.VPOS.PAL 210
.def IRQ.VPOS.NTSC IRQ.VPOS.PAL

.def SPEED.FULL 0
.def SPEED.FASTER $1
.def SPEED.FAST $3
.def SPEED.SEMIFAST $7
.def SPEED.MEDIUM $f
.def SPEED.SEMISLOW $1f
.def SPEED.SLOW $3f
.def SPEED.SLOWER $7f
.def SPEED.SLOWEST $ff

;memory clear patterns
.def MEMORY_CLEAR.ZERO 0
.def MEMORY_CLEAR.NOP $eaea
.def MEMORY_CLEAR.TILEMAP.BG1 $2907
.def MEMORY_CLEAR.TILEMAP.BG3 $2400
.def MEMORY_CLEAR.OAM $e0e0
.def MEMORY_CLEAR.STRING $2020
.def MEMORY_CLEAR.VWF.FILLED $00ff

.enum 4
  FASTCALL.ARG.0 dw
  FASTCALL.ARG.1 dw
  FASTCALL.ARG.2 dw
  FASTCALL.ARG.3 dw
  FASTCALL.ARG.4 dw
  FASTCALL.ARG.5 dw
  FASTCALL.ARG.6 dw
  FASTCALL.ARG.7 dw
  FASTCALL.ARG.8 dw
  FASTCALL.ARG.9 dw
.ende

;overlay stuff represented by sprites
.enum $fff0
  OAM.SORT_PRIORITY.HUD db
  OAM.SORT_PRIORITY.TEXT db
  OAM.SORT_PRIORITY.CURSOR db
.ende

.def OAM.SORT_PRIORITY.PLATFORM 0

.def Song.none.PTR 0

.def SRAM $a06000

.def STATIC.32X32_LUT $10000

.def SCREEN.DEFAULT.SIZE.X 255
.def SCREEN.DEFAULT.SIZE.Y 223

.def SCREEN.MARGIN.X TILE.SIZE.X
.def SCREEN.MARGIN.Y TILE.SIZE.Y

.def OAM_SLOTS 128


.def BUTTON_SLASH JOY_BUTTON_A
.def BUTTON_JUMP JOY_BUTTON_B
.def BUTTON_SHOOT JOY_BUTTON_Y
.def BUTTON_SPECIAL JOY_BUTTON_X
.def BUTTON_MENU JOY_BUTTON_START

.enum 0
  FRAME_CHECK.PHASE.LAYER0 db
  FRAME_CHECK.PHASE.LAYER1 db
  FRAME_CHECK.PHASE.LAYER2 db
  FRAME_CHECK.PHASE.OBJECTS db
.ende

.def FRAME_CHECK.PHASE.MASK 3
